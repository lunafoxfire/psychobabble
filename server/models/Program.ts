import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, OneToMany, ManyToMany, JoinTable, getRepository } from "typeorm";
import { Video } from './Video';
import { User } from "./User";
import { Response } from "./Response";

/** Playlist of videos generated by an Admin for a Client */
@Entity('programs')
export class Program {
  /** Autogenerated id as a UUID string. */
  @PrimaryGeneratedColumn("uuid")
  id: string;

  /** Description of the playlist. Nullable. */
  @Column({nullable: true})
  description: string;

  /** Expiration date of the playlist as a UNIX timestamp. Nullable. */
  @Column({type:'bigint', nullable: true})
  expiration: number;

  /** Whether the Program has expired or been closed. */
  @Column()
  closed: boolean;

  /** All videos in the Program's playlist. */
  @ManyToMany(type => Video, video => video.programs)
  @JoinTable()
  videos: Video[];

  /** The client this program was created for. */
  @ManyToOne(type => User, user => user.clientPrograms)
  client: User;

  /** The admin that created this program. */
  @ManyToOne(type => User, maker => maker.createdPrograms)
  author: User;

  /** All responses by subjects to the videos in this Program. */
  @OneToMany(type => Response, responses => responses.program)
  responses: Response[];

  /** Saves a new Program to the database. */
  public static async saveNewAsync(programOptions: NewProgramOptions): Promise<Program> {
    let programRepo = await getRepository(Program);
    let newProgram = new Program();
      newProgram.description = programOptions.description;
      newProgram.expiration = programOptions.expiration;
      newProgram.closed = false;
      newProgram.videos = programOptions.videos;
      newProgram.client = programOptions.client;
      newProgram.author = programOptions.author;
    return programRepo.save(newProgram);
  }
}

/** All options required to create a new Program. */
export interface NewProgramOptions {
  /** Description of the Program */
  description: string;
  /** Expiration date of the program as a UNIX timestamp */
  expiration: number;
  /** All videos in the Program's playlist. */
  videos: Video[];
  /** The client this program was created for. */
  client: User;
  /** The admin that created this program. */
  author: User;
}
