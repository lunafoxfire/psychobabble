import {
  Entity, Column, PrimaryGeneratedColumn, ManyToOne, ManyToMany, JoinTable,
  Repository, getRepository
} from "typeorm";
import { SoftSkill, SoftSkillType, SoftSkillService } from "./SoftSkill";
import { User } from "./User";

/** Represents a request by a client for a new Program to be created */
@Entity('program_requests')
export class ProgramRequest {
  /** Autogenerated id as a UUID string. */
  @PrimaryGeneratedColumn("uuid")
  id: string;

  /** Text describing the requested Program. Nullable. */
  @Column({nullable: true})
  text: string;

  /** Client that entered this request. */
  @ManyToOne(type => User, user => user.programRequests)
  client: User;

  /** Soft Skills to be included in the requested Program. */
  @ManyToMany(type => SoftSkill, softSkills => softSkills.programRequests)
  @JoinTable()
  softSkills: SoftSkill[];
}

export class ProgramRequestService {
  public requestRepo: Repository<ProgramRequest>;
  private softSkillService: SoftSkillService;

  constructor(requestRepo: Repository<ProgramRequest> = null, softSkillService: SoftSkillService = null) {
    this.requestRepo = requestRepo || getRepository(ProgramRequest);
    this.softSkillService = softSkillService || new SoftSkillService();
  }

  /** Saves a new ProgramRequest to the database. */
  public async saveNewAsync(requestOptions: NewProgramRequestOptions): Promise<ProgramRequest> {
    let softSkills: SoftSkill[] = [];
    if (requestOptions.softSkills) {
      await Promise.all(requestOptions.softSkills.map(async (skillType) => {
        softSkills.push(await this.softSkillService.findByNameAsync(skillType));
        return;
      }));
    }
    let newRequest = new ProgramRequest();
      newRequest.client = requestOptions.client;
      newRequest.text = requestOptions.text;
      newRequest.softSkills = softSkills;
    return this.requestRepo.save(newRequest);
  }
}

/** All options required to create a new ProgramRequest. */
export interface NewProgramRequestOptions {
  /** Client that entered this request. */
  client: User;
  /** Text describing the requested Program. */
  text: string;
  /** Soft Skills to be included in the requested Program. Optional. */
  softSkills?: SoftSkillType[];
}
